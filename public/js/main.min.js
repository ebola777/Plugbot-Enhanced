/**
 * App bootstrap, load dependencies.
 *
 * @module plugbot/main
 * @author ebola777@yahoo.com.tw (Shawn Chang)
 * @copyright Shawn Chang 2013
 * @license MIT
 */

/**
 * Application file.
 *
 * @module plugbot/app
 * @author ebola777@yahoo.com.tw (Shawn Chang)
 * @copyright Shawn Chang 2013
 * @license MIT
 */

require(["angular","domReady"],function(angular,domReady){domReady(function(){require(["plugbot/app"],function(){angular.bootstrap(angular.element("#app"),["app"])})})});define("main",function(){});define("plugbot/controllers/module",["angular"],function(angular){return angular.module("app.controllers",[])});define("plugbot/controllers/MainCtrl",["plugbot/controllers/module"],function(module){module.controller("MainCtrl",["$scope","Settings","SiteApi",function($scope,Settings,SiteApi){function onItemClick(item){var isEnabled=!settings[item.id];_.isFunction(item.switchEnabled)&&item.switchEnabled(isEnabled);settings[item.id]=isEnabled;Settings.save()}function initEnabled(item){item.switchEnabled(settings[item.id])}function onMediaResolved(media){$scope.mediaUrl=media&&media.url?media.url:null}var ID_MEDIA_CHANGE="MainCtrl.mediaLink",settings=Settings.read().main;$scope.items=[{id:"autoWoot",text:"Auto Woot",initialize:initEnabled,handlerClick:onItemClick,switchEnabled:function(isEnabled){SiteApi.autoWoot(isEnabled)}},{id:"autoJoin",text:"Auto Join",initialize:initEnabled,handlerClick:onItemClick,switchEnabled:function(isEnabled){SiteApi.autoJoin(isEnabled)}}];$scope.isExpanded=!1;$scope.mediaUrl=null;$scope.handleButtonClick=function(){return"toggle"};$scope.isEnabled=function(item){return settings[item.id]};$scope.click=function(item){_.isFunction(item.handlerClick)&&item.handlerClick(item)};$scope.getMediaLink=function(){SiteApi.getMedia(onMediaResolved)};_.each($scope.items,function(item){_.isFunction(item.initialize)&&item.initialize(item)});SiteApi.getMedia(onMediaResolved);SiteApi.bindMediaChange(ID_MEDIA_CHANGE,function(){$scope.mediaUrl=null},onMediaResolved);$scope.$on("$destroy",function(){SiteApi.autoWoot(!1);SiteApi.autoJoin(!1);SiteApi.unbindMediaChange(ID_MEDIA_CHANGE)})}])});define("plugbot/controllers/SettingsCtrl",["plugbot/controllers/module"],function(module){module.controller("SettingsCtrl",["$scope","$window","Settings",function($scope,$window,Settings){$scope.items=[{text:"Reset Settings",click:function(){$window.confirm("Reset Settings?\nPlease Reload the Page after Resetting.")&&Settings.reset()}}];$scope.handleButtonClick=function(){return"hide"}}])});define("plugbot/controllers/index",["plugbot/controllers/MainCtrl","plugbot/controllers/SettingsCtrl"],_.noop);define("plugbot/directives/module",["angular"],function(angular){return angular.module("app.directives",[])});define("plugbot/directives/draggable",["plugbot/directives/module","angular"],function(module,angular){module.directive("draggable",["$document","$window","DomGeometry","Settings",function($document,$window,DomGeometry,Settings){return{restrict:"A",scope:{dragGrid:"&"},controller:["$scope",function($scope){var settingsWindow;$scope.settings=Settings.read();settingsWindow=$scope.settings.window;$scope.loadPosition=function(id,fnValidate,fnSetPosition){id&&settingsWindow[id]&&fnValidate(settingsWindow[id])&&fnSetPosition(settingsWindow[id])};$scope.savePosition=function(id,currentPosition){if(id&&currentPosition){settingsWindow[id]=currentPosition;Settings.save()}}}],link:function(scope,element,attrs){function suspendIframe(){var originalPointerEvents,iframe=options.iframe;if(iframe.length){originalPointerEvents=iframe.css("pointer-events");iframe.css("pointer-events","none");runtime.originalPointerEvents=originalPointerEvents}}function resumeIframe(){var iframe=options.iframe;iframe.length&&iframe.css("pointer-events",runtime.originalPointerEvents)}function setAbsolute(){options.relative&&element.css({position:"absolute",left:element.prop("offsetLeft"),top:element.prop("offsetTop"),width:element.outerWidth(),height:element.outerHeight()})}function setRelative(){options.relative&&element.css({position:"relative",left:"",top:"",width:"",height:""})}function setZIndex(value){element.css("z-index",value)}function getRect(pos,el){var width=el.outerWidth(),height=el.outerHeight();return{left:pos.x,top:pos.y,right:pos.x+width,bottom:pos.y+height,width:width,height:height}}function getProperPosition(pos){var newSourceRect,isContain,restraint,containment=options.containment,properPos={x:pos.x,y:pos.y};if(options.grid){properPos.x-=properPos.x%options.grid[0];properPos.y-=properPos.y%options.grid[1]}_.each(options.snap,function(other){var snap=DomGeometry.getSnap(other,getRect(properPos,element),options.snapMode,options.snapTolerance);if(snap.x||snap.y){properPos.x+=snap.x;properPos.y+=snap.y}});if(containment.length){newSourceRect=getRect(properPos,element);isContain=DomGeometry.isContain(containment,newSourceRect);if(!isContain.x||!isContain.y){restraint=DomGeometry.getRestraint(containment,newSourceRect);isContain.x||(properPos.x=restraint.left);isContain.y||(properPos.y=restraint.top)}}return properPos}function validatePosition(pos){var isValid=!0,sourceRect=getRect(pos,element),containment=options.containment;containment.length&&(isValid=DomGeometry.isContain(containment,sourceRect));isValid&&_.each(options.elemNoOverlap,function(other){isValid&&(isValid=!DomGeometry.isIntersect(other,sourceRect))});return isValid}function setElementPosition(pos){runtime.currentPosition=pos;element.css({left:pos.x,top:pos.y})}function moveElement(pos){var newPos=getProperPosition(pos);validatePosition(newPos)&&setElementPosition(newPos)}function onResize(){scope.$apply(function(){var newSize,scale,newPos,elemKeepZoom=options.elemKeepZoom;if(elemKeepZoom.length){newSize={width:elemKeepZoom.width(),height:elemKeepZoom.height()};scale={width:newSize.width/runtime.originalKeepZoomSize.width,height:newSize.height/runtime.originalKeepZoomSize.height};newPos={x:runtime.currentPosition.x*scale.width,y:runtime.currentPosition.y*scale.height};newPos=getProperPosition(newPos);validatePosition(newPos)&&setElementPosition(newPos);runtime.originalKeepZoomSize=newSize}})}function onScroll(){scope.$apply(function(){var mouseOffset=runtime.currentMouseOffset,scrollOffset={x:window.scrollLeft()-initialScroll.x,y:window.scrollTop()-initialScroll.y},pos={x:start.x+mouseOffset.x+scrollOffset.x,y:start.y+mouseOffset.y+scrollOffset.y};runtime.currentScrollOffset=scrollOffset;moveElement(pos)})}function onMouseMove(event){var scrollOffset=runtime.currentScrollOffset,mouseOffset={x:event.clientX-initialMouse.x,y:event.clientY-initialMouse.y},pos={x:start.x+mouseOffset.x+scrollOffset.x,y:start.y+mouseOffset.y+scrollOffset.y};runtime.currentMouseOffset=mouseOffset;moveElement(pos);return!1}function onMouseUp(){scope.savePosition(options.id,runtime.currentPosition);setRelative();setZIndex(originalZIndex);resumeIframe();window.off("scroll",onScroll);$document.off("mousemove",onMouseMove);$document.off("mouseup",onMouseUp);return!1}function onMouseDown(event){var isKeepRunningEvents,target=angular.element(event.target);if(!target.closest(attrs.dragCancel).length){start={x:element.prop("offsetLeft"),y:element.prop("offsetTop")};initialMouse={x:event.clientX,y:event.clientY};initialScroll={x:window.scrollLeft(),y:window.scrollTop()};_.extend(options,{containment:angular.element(attrs.dragContainment),iframe:angular.element(attrs.dragIframeFix),snap:angular.element(attrs.dragSnap),elemNoOverlap:angular.element(attrs.dragNoOverlap),elemKeepZoom:angular.element(attrs.dragKeepZoom)});_.extend(runtime,{currentMouseOffset:{x:0,y:0},currentScrollOffset:{x:0,y:0},currentPosition:void 0,originalPointerEvents:void 0});setAbsolute();setZIndex(options.zIndex);suspendIframe();window.on("scroll",onScroll);$document.on("mousemove",onMouseMove);$document.on("mouseup",onMouseUp);isKeepRunningEvents=!1}return isKeepRunningEvents}var start,initialMouse,initialScroll,options,runtime,window=angular.element($window),originalZIndex=element.css("z-index"),elemHandle=element.find(attrs.dragHandle);options={id:attrs.dragId,relative:""===attrs.dragRelative,zIndex:attrs.dragZIndex,containment:angular.element(attrs.dragContainment),containmentTolerance:attrs.dragContainmentTolerance,iframe:angular.element(attrs.dragIframeFix),grid:scope.dragGrid(),snap:angular.element(attrs.dragSnap),snapMode:attrs.dragSnapMode,snapTolerance:attrs.dragSnapTolerance||8,elemNoOverlap:angular.element(attrs.dragNoOverlap),elemKeepZoom:angular.element(attrs.dragKeepZoom)};runtime={currentPosition:{x:element.prop("offsetLeft"),y:element.prop("offsetTop")},originalKeepZoomSize:{width:options.elemKeepZoom.width(),height:options.elemKeepZoom.height()}};elemHandle.length||(elemHandle=element);setRelative();scope.loadPosition(options.id,validatePosition,setElementPosition);window.on("resize",onResize);elemHandle.on("mousedown",onMouseDown);element.on("$destroy",function(){window.off("resize",onResize);elemHandle.off("mousedown",onMouseDown)})}}}])});define("plugbot/directives/href",["plugbot/directives/module"],function(module){module.directive("href",function(){return{restrict:"A",link:function(scope,element,attrs){function changeLink(){var value=scope[variable];if(value){element.attr("target","_blank");element.attr("href",value)}else _.isFunction(scope.getMediaLink)&&scope.getMediaLink()}var variable=attrs.href;element.on("click",changeLink);element.on("mouseenter",changeLink);element.on("$destroy",function(){element.off("click",changeLink);element.off("mouseenter",changeLink)})}}})});define("plugbot/directives/window",["plugbot/directives/module","angular"],function(module,angular){module.directive("window",function(){return{restrict:"A",link:function(scope,element,attrs){function processActions(elemButton,action){var elemToggle=angular.element(elemButton.data("window-toggle"));elemToggle.length&&elemToggle[action]()}function onClick(event){scope.$apply(function(){var action,elemButton=angular.element(event.target),idWindow=elemButton.data("window-id");if(idWindow&&scope.handleButtonClick){action=scope.handleButtonClick(idWindow);processActions(elemButton,action)}})}var children,elemHandleButtons=element.find(".handle-buttons");attrs.window&&element[attrs.window]();if(elemHandleButtons.length){children=elemHandleButtons.children();children.length&&children.on("click",onClick)}element.on("$destroy",function(){children.off("click",onClick)})}}})});define("plugbot/directives/index",["plugbot/directives/draggable","plugbot/directives/href","plugbot/directives/window"],_.noop);define("plugbot/services/module",["angular"],function(ng){return ng.module("app.services",[])});define("plugbot/services/utils/DomGeometry",["plugbot/services/module","angular"],function(module,angular){module.factory("DomGeometry",["$window",function($window){return{isContainRect:function(targetRect,sourceRect){var ret={x:!1,y:!1};targetRect.left-sourceRect.left<=0&&sourceRect.right-targetRect.right<=0&&(ret.x=!0);targetRect.top-sourceRect.top<=0&&sourceRect.bottom-targetRect.bottom<=0&&(ret.y=!0);return ret},isIntersectRect:function(targetRect,sourceRect){return targetRect.left-sourceRect.right<0&&sourceRect.left-targetRect.right<0&&targetRect.top-sourceRect.bottom<0&&sourceRect.top-targetRect.bottom<0},isContain:function(target,source){var targetRect=this.getBoundingRect(target),sourceRect=this.getBoundingRect(source);return this.isContainRect(targetRect,sourceRect)},isIntersect:function(target,source){var targetRect=this.getBoundingRect(target),sourceRect=this.getBoundingRect(source);return this.isIntersectRect(targetRect,sourceRect)},getSnap:function(target,source,snapMode,tolerance){var i,distance,targetRect=this.getBoundingRect(target),sourceRect=this.getBoundingRect(source),propsX=["left","right"],propsY=["top","bottom"],indexes=[],ret={x:0,y:0};("inner"===snapMode||"both"===snapMode)&&indexes.push([0,0],[1,1]);("outer"===snapMode||"both"===snapMode)&&indexes.push([0,1],[1,0]);for(i=0;i<indexes.length;i+=1){distance=targetRect[propsX[indexes[i][0]]]-sourceRect[propsX[indexes[i][1]]];Math.abs(distance)<=tolerance&&targetRect.top<=sourceRect.bottom&&sourceRect.top<=targetRect.bottom&&(ret.x+=distance);distance=targetRect[propsY[indexes[i][0]]]-sourceRect[propsY[indexes[i][1]]];Math.abs(distance)<=tolerance&&targetRect.left<=sourceRect.right&&sourceRect.left<=targetRect.right&&(ret.y+=distance)}return ret},getRestraint:function(target,source){var targetRect=this.getBoundingRect(target),sourceRect=this.getBoundingRect(source),isContain=this.isContainRect(targetRect,sourceRect),ret=sourceRect;if(!isContain.x)if(sourceRect.left<targetRect.left){ret.left=targetRect.left;ret.right=targetRect.left+sourceRect.width}else{ret.right=targetRect.right;ret.left=targetRect.right-sourceRect.width}if(!isContain.y)if(sourceRect.top<targetRect.top){ret.top=targetRect.top;ret.bottom=targetRect.top+sourceRect.height}else{ret.bottom=targetRect.bottom;ret.top=targetRect.bottom-sourceRect.height}return ret},offsetRect:function(target,source){source=_.clone(source);_.defaults(source,{x:0,y:0});target.left+=source.x;target.right+=source.x;target.top+=source.y;target.bottom+=source.y},getBoundingRect:function(element){var rect,window=angular.element($window),props=["left","right","top","bottom","width","height"],scroll={x:window.scrollLeft(),y:window.scrollTop()};if(element instanceof angular.element){rect=_.pick(element[0].getBoundingClientRect(),props);this.offsetRect(rect,scroll)}else if(element instanceof HTMLElement){rect=_.pick(element.getBoundingClientRect(),props);this.offsetRect(rect,scroll)}else rect=element;return rect}}}])});define("plugbot/services/Export",["plugbot/services/module","angular"],function(module,angular){module.factory("Export",["$window","Settings",function($window,Settings){$window.plugbot={version:"2.0.7",dev:{getSiteHighestZIndex:function(){var elements=angular.element("#audience, #dj-booth, #playback-container, #dj-button, #vote, .app-right"),highestZIndexDetails={element:null,zIndex:-1};_.each(elements,function(element){var zIndex=angular.element(element).css("z-index");zIndex>highestZIndexDetails.zIndex&&(highestZIndexDetails={element:element,zIndex:zIndex})});return highestZIndexDetails}},resetSettings:function(){Settings.reset()}}}])});define("plugbot/services/DomInjection",["plugbot/services/module","angular"],function(module,angular){module.factory("DomInjection",["$templateCache",function($templateCache){var elemApp=angular.element("#app");elemApp.append($templateCache.get("main.tpl.html"));elemApp.append($templateCache.get("settings.tpl.html"))}])});define("plugbot/services/Settings",["plugbot/services/module"],function(module){module.factory("Settings",["$window",function($window){var settings,KEY="plugbotEnhanced",INTERVAL_DEBOUNCE_SAVE=1e3,localStorage=$window.localStorage,defaults={main:{autoWoot:!0,autoJoin:!1},window:{main:{x:70,y:85},settings:{x:80,y:100}}};return{read:function(){settings||(settings=JSON.parse(localStorage[KEY]?localStorage[KEY]:JSON.stringify(defaults)));return settings},save:function(){this.debounceSave()},reset:function(){delete localStorage[KEY]},debounceSave:_.debounce(function(){localStorage[KEY]=JSON.stringify(settings)},INTERVAL_DEBOUNCE_SAVE)}}])});define("plugbot/services/SiteApi",["plugbot/services/module","angular"],function(module,angular){module.factory("SiteApi",["$http","$interval","$window",function($http,$interval,$window){var idWoot,idJoin,listMediaChange,API=$window.API;return{woot:function(){var that=this;this.stopWoot();idWoot=$interval(function(){var elemWoot=angular.element("#woot"),user=API.getUser(),dj=API.getDJ();dj&&dj.id!==user.id&&0===user.vote?elemWoot.click():that.stopWoot()},1e3)},join:function(){var that=this;this.stopJoin();idJoin=$interval(function(){var joinResult=API.djJoin();joinResult||that.stopJoin()},1e3)},getMedia:function(callback,media){var mediaDetails;media||(media=API.getMedia());if(media){mediaDetails={};if(1===media.format){mediaDetails.format="youtube";mediaDetails.url="//www.youtube.com/watch?v="+media.cid;callback(mediaDetails)}else{mediaDetails.format="soundcloud";$http.get("//api.soundcloud.com/tracks/"+media.cid+".json?client_id=YOUR_CLIENT_ID").then(function(data){mediaDetails.url=data.data.permalink_url},function(){mediaDetails.url=null}).then(function(){callback(mediaDetails)})}}},stopWoot:function(){$interval.cancel(idWoot)},stopJoin:function(){$interval.cancel(idJoin)},autoWoot:function(isEnabled){if(isEnabled){API.on(API.ADVANCE,this.woot,this);this.woot()}else{API.off(API.ADVANCE,this.woot);this.stopWoot()}},autoJoin:function(isEnabled){if(isEnabled){API.on(API.WAIT_LIST_UPDATE,this.join,this);this.join()}else{API.off(API.WAIT_LIST_UPDATE,this.join);this.stopJoin()}},onMediaChange:function(data){var that=this;_.each(listMediaChange,function(callback){callback.onAdvance();that.getMedia(callback.onResolved,data.media)})},bindMediaChange:function(id,onAdvance,onResolved){if(!listMediaChange){API.on(API.ADVANCE,this.onMediaChange,this);listMediaChange={}}listMediaChange[id]={onAdvance:onAdvance,onResolved:onResolved}},unbindMediaChange:function(id){if(id)delete listMediaChange[id];else{API.off(API.ADVANCE,this.onMediaChange);listMediaChange={}}},destroy:function(){this.autoWoot(!1);this.autoJoin(!1);this.unbindMediaChange()}}}])});define("plugbot/services/index",["plugbot/services/utils/DomGeometry","plugbot/services/Export","plugbot/services/DomInjection","plugbot/services/Settings","plugbot/services/SiteApi"],_.noop);angular.module("app.views",["main.tpl.html","settings.tpl.html"]);angular.module("main.tpl.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("main.tpl.html",'<div class="plugbot-window plugbot-main"\n     data-window\n     data-draggable\n     data-drag-id="main"\n     data-drag-z-index="1000000"\n     data-drag-containment="#app"\n     data-drag-iframe-fix="#yt-frame"\n     data-drag-handle=".handle"\n     data-drag-cancel=".handle-buttons"\n     data-drag-grid="[4, 4]"\n     data-drag-snap=".app-header, #audience, #dj-booth, #playback-container, #dj-button, #vote, .app-right, #footer"\n     data-drag-snap-mode="outer"\n     data-drag-snap-tolerance="8"\n     data-drag-no-overlap=".app-header, #footer"\n     data-drag-keep-zoom="#app"\n     data-ng-controller="MainCtrl">\n    <div class="handle">\n        <span class="title">Plugbot</span>\n        <span class="handle-buttons">\n            <i class="icon icon-settings-white" data-window-id="settings" data-window-toggle=".plugbot-settings"></i>\n            <i class="icon"\n               data-ng-class="{ \'icon-arrow-up\': isExpanded, \'icon-arrow-down\': !isExpanded }"\n               data-ng-click="isExpanded = !isExpanded"></i>\n        </span>\n    </div>\n    <div class="body">\n        <ul>\n            <li class="item"\n                data-ng-repeat="item in items"\n                data-ng-class="{ \'enabled\': isEnabled(item), disabled: !isEnabled(item) }"\n                data-ng-click="click(item)">{{item.text}}</li>\n            <li><a class="item item-url" data-href="mediaUrl" data-ng-show="isExpanded">Media Link...</a></li>\n        </ul>\n    </div>\n</div>\n')}]);angular.module("settings.tpl.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("settings.tpl.html",'<div class="plugbot-window plugbot-settings"\n     data-window="hide"\n     data-draggable\n     data-drag-id="settings"\n     data-drag-z-index="1000000"\n     data-drag-containment="#app"\n     data-drag-iframe-fix="#yt-frame"\n     data-drag-handle=".handle"\n     data-drag-cancel=".handle-buttons"\n     data-drag-grid="[8, 8]"\n     data-drag-snap="#app"\n     data-drag-snap-mode="inner"\n     data-drag-snap-tolerance="16"\n     data-drag-no-overlap=".app-header, #footer"\n     data-drag-keep-zoom="#app"\n     data-ng-controller="SettingsCtrl">\n    <div class="handle">\n        <span class="title">Settings</span>\n        <span class="handle-buttons">\n            <i class="icon icon-dialog-close" data-window-id="settings" data-window-toggle=".plugbot-settings"></i>\n        </span>\n    </div>\n    <div class="body">\n        <ul>\n            <li class="item"\n                data-ng-repeat="item in items"\n                data-ng-click="item.click()">{{item.text}}</li>\n        </ul>\n    </div>\n</div>\n')}]);define("plugbot/views/index",function(){});define("plugbot/app",["angular","plugbot/controllers/index","plugbot/directives/index","plugbot/services/index","plugbot/views/index"],function(angular){var app=angular.module("app",["app.controllers","app.directives","app.services","app.views"]);app.run(["DomInjection","Export",_.noop]);return app});